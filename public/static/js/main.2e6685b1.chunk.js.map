{"version":3,"sources":["services/pdfService.js","images/D-signature-logo.png","pages/CreatePdf.js","pages/EditPdf.js","App.js","reportWebVitals.js","index.js"],"names":["axios","Axios","create","withCredentials","baseUrl","getPdf","id","get","then","res","data","savePdf","pdf","_id","put","post","ctx","page","renderCtx","pdfjsLib","workerSrc","pdfjsWorker","file","FileReader","initialStyle","left","window","innerWidth","top","innerHeight","width","height","CreatePdf","canvasRef","useRef","fileName","useState","isLoading","setIsLoading","link","setLink","navPosition","setNavPosition","useEffect","visualViewport","addEventListener","viewportHandler","removeEventListener","e","style","target","offsetLeft","scale","offsetTop","current","getContext","navigator","open","encodeURIComponent","handlePdf","a","onload","files","name","split","onRenderCtx","result","length","readAsDataURL","promise","doc","getPage","getViewport","viewport","canvasContext","render","pdfToSave","savedPdf","location","origin","className","type","accept","onChange","hidden","htmlFor","onClick","ref","EditPdf","props","pdfId","match","params","loadedPdf","isEditMode","setIsEditMode","isPdfEdited","setIsPdfEdited","edited","img","Image","drawImage","src","handleMouseDraw","nativeEvent","which","draw","offsetX","offsetY","handleTouchDraw","touches","clientX","clientY","x","y","lineWidth","lineCap","lineTo","stroke","finishPosition","beginPath","clearRect","toDataURL","updatedPdf","desynchronized","onGetPdf","prev","fontSize","document","createElement","href","download","click","onMouseDown","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","touchAction","App","component","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"iYACMA,E,OAAQC,EAAMC,OAAO,CAAEC,iBAAiB,IACxCC,EAAkD,WAEjD,SAASC,EAAOC,GACnB,OAAON,EAAMO,IAAN,UAAaH,EAAb,YAAwBE,IAAME,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAGlD,SAASC,EAAQC,GACpB,OAAQA,EAAIC,IAERb,EAAMc,IAAIV,EAASQ,GAAKJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QADxCV,EAAMe,KAAKX,EAASQ,GAAKJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QCVlC,ICQXM,EACAC,EACAC,EDVW,ICMfC,sBAA6BC,UAAYC,IAKzC,ICJIL,EACAC,EACAC,EDEEI,EAAO,IAAIC,WAGXC,EAAe,CACjBC,KAAOC,OAAOC,WAAa,GAAM,KACjCC,IAAMF,OAAOG,YAAc,IAAO,KAClCC,MAAO,OACPC,OAAQ,SAICC,EAAY,WACrB,IAAMC,EAAYC,mBACZC,EAAWD,iBAAO,YAFG,EAGOE,oBAAS,GAHhB,mBAGpBC,EAHoB,KAGTC,EAHS,OAIHF,qBAJG,mBAIpBG,EAJoB,KAIdC,EAJc,OAKWJ,mBAASZ,GALpB,mBAKpBiB,EALoB,KAKPC,EALO,KAO3BC,qBAAU,WACN,GAAKjB,OAAOkB,eAIZ,OAHAlB,OAAOkB,eAAeC,iBAAiB,SAAUC,GACjDpB,OAAOkB,eAAeC,iBAAiB,SAAUC,GAEzC,WACJpB,OAAOkB,eAAeG,oBAAoB,SAAUD,GACpDpB,OAAOkB,eAAeG,oBAAoB,SAAUD,MAEzD,IAEH,IAAMA,EAAkB,SAACE,GACrB,IAAMC,EAAQ,CACVxB,KAAOuB,EAAEE,OAAOpB,MAAQkB,EAAEE,OAAOC,WAAmB,EAAIH,EAAEE,OAAOE,MAAnB,GAA6B,KAC3ExB,IAAMoB,EAAEE,OAAOnB,OAASiB,EAAEE,OAAOG,UAAmB,EAAIL,EAAEE,OAAOE,MAApB,IAA8B,KAC3EtB,MAAa,EAAIkB,EAAEE,OAAOE,MAAnB,GAA4B,KACnCrB,OAAe,EAAIiB,EAAEE,OAAOE,MAApB,IAA6B,MAEzCV,EAAeO,IAGnBN,qBAAU,WACN3B,EAAMiB,EAAUqB,QAAQC,WAAW,QACpC,CAACtB,IAEJU,qBAAU,WACDJ,IACD,UAAWiB,UAAW9B,OAAO+B,KAAP,+BAAoCC,mBAAmB,GAAD,OAAInB,EAAJ,uFAC3Eb,OAAO+B,KAAP,6CAAkDC,mBAAmB,GAAD,OAAInB,EAAJ,0FAC1E,CAACA,IAEJ,IAAMoB,EAAS,uCAAG,WAAOX,GAAP,SAAAY,EAAA,sEACRpB,EAAQ,MADA,UAEdlB,EAAKuC,OAAS,WACV1B,EAASmB,QAAUN,EAAEE,OAAOY,MAAM,GAAGC,KAAKC,MAAM,KAAK,GACrDC,EAAY3C,EAAK4C,UAIjBlB,EAAEE,OAAOY,MAAMK,OARL,gCAQmB7C,EAAK8C,cAAcpB,EAAEE,OAAOY,MAAM,IARrD,2CAAH,sDAtCY,SAiDZG,EAjDY,8EAiD3B,WAA2BvD,GAA3B,iBAAAkD,EAAA,sEACsBzC,cAAqBT,GAAM2D,QADjD,cACUC,EADV,gBAEiBA,EAAIC,QAAQ,GAF7B,cAEItD,EAFJ,gBAG2BA,EAAKuD,YAAY,CAAEpB,MAAO,IAHrD,cAGUqB,EAHV,OAIIxC,EAAUqB,QAAQvB,OAAS0C,EAAS1C,OACpCE,EAAUqB,QAAQxB,MAAQ2C,EAAS3C,MAEnCZ,EAAY,CACRwD,cAAe1D,EACfyD,YATR,UAYUxD,EAAK0D,OAAOzD,GAAWmD,QAZjC,6CAjD2B,kEAgE3B,8BAAAT,EAAA,yDACStC,EAAK4C,OADd,wDAEI5B,GAAa,GAFjB,SAIcsC,EAAY,CAAElE,KAAMY,EAAK4C,OAAQH,KAAM5B,EAASmB,SAJ9D,SAK+B3C,EAAQiE,GALvC,OAKcC,EALd,OAMQrC,EAAQd,OAAOoD,SAASC,OAAS,YAAcF,EAAShE,KANhE,uBASQyB,GAAa,GATrB,0EAhE2B,sBA6E3B,OACI,sBAAK0C,UAAU,uBAAf,UACI,qBAAKA,UAAU,cAAc/B,MAAOR,EAApC,SAEI,sBAAKuC,UAAU,oCAAf,UACI,uBAAOA,UAAU,YAAY1E,GAAG,iBAAiB2E,KAAK,OAAOC,OAAO,kBAAkBC,SAAUxB,EAAWyB,QAAM,IACjH,uBAAOJ,UAAU,SAASK,QAAQ,iBAAlC,SACI,0BAEJ,qBAAKL,UAAS,eAAU3C,EAAY,UAAY,IAAMiD,QAtF3C,kDA0FnB,qBAAKN,UAAU,mBAAf,SACI,wBAAQO,IAAKtD,EAAW+C,UAAU,qB,QC5GlD7D,sBAA6BC,UAAYC,IAMzC,IAAMG,EAAe,CACjBC,KAAOC,OAAOC,WAAa,GAAM,KACjCC,IAAMF,OAAOG,YAAc,IAAO,KAClCC,MAAO,OACPC,OAAQ,SAGCyD,EAAU,SAACC,GACpB,IAAMC,EAAQD,EAAME,MAAMC,OAAOtF,GAC3BuF,EAAY3D,mBACZD,EAAYC,mBAHY,EAKIE,oBAAS,GALb,mBAKvBC,EALuB,KAKZC,EALY,OAMMF,oBAAS,GANf,mBAMvB0D,EANuB,KAMXC,EANW,OAOQ3D,mBAASZ,GAPjB,mBAOvBiB,EAPuB,KAOVC,EAPU,OAQQN,qBARR,mBAQvB4D,EARuB,KAQVC,EARU,KAW9BtD,qBAAU,WAIN,OAHAjB,OAAOkB,eAAeC,iBAAiB,SAAUC,GACjDpB,OAAOkB,eAAeC,iBAAiB,SAAUC,GAEzC,WACJpB,OAAOkB,eAAeG,oBAAoB,SAAUD,GACpDpB,OAAOkB,eAAeG,oBAAoB,SAAUD,MAEzD,IAEH,IAAMA,EAAkB,SAACE,GACrB,IAAMC,EAAQ,CACVxB,KAAOuB,EAAEE,OAAOpB,MAAQkB,EAAEE,OAAOC,WAAmB,EAAIH,EAAEE,OAAOE,MAAnB,GAA6B,KAC3ExB,IAAMoB,EAAEE,OAAOnB,OAASiB,EAAEE,OAAOG,UAAmB,EAAIL,EAAEE,OAAOE,MAApB,IAA8B,KAC3EtB,MAAa,EAAIkB,EAAEE,OAAOE,MAAnB,GAA4B,KACnCrB,OAAe,EAAIiB,EAAEE,OAAOE,MAApB,IAA6B,MAEzCV,EAAeO,IA5BW,4CAsC9B,sBAAAW,EAAA,6DACItB,GAAa,GADjB,SAE8BjC,EAAOqF,GAFrC,UAEIG,EAAUvC,QAFd,OAGSuC,EAAUvC,QAHnB,iDAII2C,EAAeJ,EAAUvC,QAAQ4C,QACjCjC,EAAY4B,EAAUvC,QAAQ5C,MAC9B4B,GAAa,GANjB,4CAtC8B,+BA+Cf2B,EA/Ce,8EA+C9B,WAA2BvD,GAA3B,mBAAAkD,EAAA,yDACSiC,EAAUvC,QAAQ4C,OAD3B,iCAE0B/E,cAAqBT,GAAM2D,QAFrD,cAEcC,EAFd,gBAGqBA,EAAIC,QAAQ,GAHjC,cAGQtD,EAHR,gBAI+BA,EAAKuD,YAAY,CAAEpB,MAAO,IAJzD,cAIcqB,EAJd,OAKQxC,EAAUqB,QAAQvB,OAAS0C,EAAS1C,OACpCE,EAAUqB,QAAQxB,MAAQ2C,EAAS3C,MACnCZ,EAAY,CACRwD,cAAe1D,EACfyD,YATZ,UAWcxD,EAAK0D,OAAOzD,GAAWmD,QAXrC,iCAcc8B,EAAM,IAAIC,OACZvC,OAAS,WACT5B,EAAUqB,QAAQvB,OAASoE,EAAIpE,OAC/BE,EAAUqB,QAAQxB,MAAQqE,EAAIrE,MAC9Bd,EAAIqF,UAAUF,EAAK,EAAG,IAE1BA,EAAIG,IAAM5F,EApBlB,6CA/C8B,sBA2E9B,SAAS6F,EAAgBvD,GACO,IAAxBA,EAAEwD,YAAYC,OAAgBX,GAGlCY,EAFgB1D,EAAEwD,YAAYG,QACd3D,EAAEwD,YAAYI,SAIlC,SAASC,EAAgB7D,GACI,IAArBA,EAAE8D,QAAQ3C,QAAiB2B,GAG/BY,EAFQ1D,EAAE8D,QAAQ,GAAGC,QAAU/D,EAAE8D,QAAQ,GAAG5D,OAAOC,WAC3CH,EAAE8D,QAAQ,GAAGE,QAAUhE,EAAE8D,QAAQ,GAAG5D,OAAOG,WAIvD,SAASqD,EAAKO,EAAGC,GACblG,EAAImG,UAAY,EAChBnG,EAAIoG,QAAU,QACdpG,EAAIqG,OAAOJ,EAAGC,GACdlG,EAAIsG,SAGR,SAASC,IACAzB,GACL9E,EAAIwG,YAlGsB,4CAqG9B,sBAAA5D,EAAA,yDACS3C,IAAQ4E,EAAUvC,QAAQ4C,OADnC,wDAEIlF,EAAIyG,UAAU,EAAG,EAAGxF,EAAUqB,QAAQxB,MAAOG,EAAUqB,QAAQvB,QAFnE,SAGUd,EAAK0D,OAAOzD,GAAWmD,QAHjC,4CArG8B,kEA4G9B,8BAAAT,EAAA,yDACSiC,EAAUvC,QADnB,wDAEU5C,EAAOuB,EAAUqB,QAAQoE,UAAU,aACzCpF,GAAa,GACbyD,GAAc,GAJlB,SAK6BpF,EAAQ,2BAAKkF,EAAUvC,SAAhB,IAAyB5C,UAL7D,UAKUiH,EALV,OAMI9B,EAAUvC,QAAUqE,EACf9B,EAAUvC,QAPnB,mDAQI2C,EAAeJ,EAAUvC,QAAQ4C,QACjCjC,EAAY4B,EAAUvC,QAAQ5C,MAC9B4B,GAAa,GAVjB,6CA5G8B,sBAiK9B,OAlIAK,qBAAU,WACN3B,EAAMiB,EAAUqB,QAAQC,WAAW,KAAM,CAAEqE,gBAAgB,IAhCjC,mCAiC1BC,KACD,CAAC5F,IAgIA,sBAAK+C,UAAU,qBAAf,UACI,qBAAKA,UAAU,cAAc/B,MAAOR,GAAW,eAASA,GAAxD,SACI,sBAAKuC,UAAS,8BAA0BgB,GAAe3D,EAAa,cAAgB,iBAApF,UACI,wBAAQ2C,UAAS,eAAUc,EAAa,SAAW,IAAMR,QA9FzE,WACSO,EAAUvC,QAAQ4C,QAAQH,GAAc,SAAC+B,GAAD,OAAWA,MA6FwC1C,OAAQY,GAAe3D,IAC3G,wBAAQ2C,UAAU,QAAQM,QAtKZ,2CAsKkCF,OAAQY,GAAe3D,IACrE2D,EAEE,qCACI,qBAAKhB,UAAU,qDAAf,SAAqE,mBAAG/B,MAAO,CAAE8E,SAAUtF,EAAYX,OAAlC,8EACrE,wBAAQkD,UAAU,WAAWM,QAlBrD,WAA0B,IAAD,EACfnD,IAAqB,OAAT0D,QAAS,IAATA,GAAA,UAAAA,EAAWvC,eAAX,eAAoBS,OAAQ,4BAAU,OAClDH,EAAIoE,SAASC,cAAc,KACjCrE,EAAEsE,KAAOjG,EAAUqB,QAAQoE,YAC3B9D,EAAEuE,SAAWhG,EACbyB,EAAEwE,cAUc,wBAAQpD,UAAS,eAAU3C,EAAY,UAAY,IAAMiD,QAxK/C,kDAgLtB,qBAAKN,UAAU,mBAAf,SACI,wBAAQO,IAAKtD,EAAW+C,UAAU,aAAaqD,YAAa9B,EAAiB+B,YAAa/B,EACtFgC,UAAWhB,EAAgBiB,aAAc3B,EAAiB4B,YAAa5B,EACvE6B,WAAYnB,EAAgBtE,MAAO,CAAE0F,YAAa7C,EAAa,OAAS,gBC9L/E8C,EAAM,WACjB,OACE,sBAAK5D,UAAU,gBAAf,UACE,qBAAKA,UAAU,mCAAf,SACE,qBAAKA,UAAU,WAEjB,eAAC,IAAD,WACE,cAAC,IAAD,CAAO6D,UAAWrD,EAASsD,KAAK,iBAChC,cAAC,IAAD,CAAOD,UAAW7G,EAAW8G,KAAK,aCH3BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzI,MAAK,YAAkD,IAA/C0I,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCAdO,IAAS5E,OACP,cAAC,IAAM6E,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJxB,SAASyB,eAAe,SAM1BV,M","file":"static/js/main.2e6685b1.chunk.js","sourcesContent":["import Axios from 'axios';\r\nconst axios = Axios.create({ withCredentials: true });\r\nconst baseUrl = process.env.NODE_ENV === 'production' ? '/api/pdf' : 'http://localhost:3030/api/pdf';\r\n\r\nexport function getPdf(id) {\r\n    return axios.get(`${baseUrl}/${id}`).then(res => res.data);\r\n}\r\n\r\nexport function savePdf(pdf) {\r\n    return !pdf._id ?\r\n        axios.post(baseUrl, pdf).then(res => res.data) :\r\n        axios.put(baseUrl, pdf).then(res => res.data);\r\n}\r\n","export default __webpack_public_path__ + \"static/media/D-signature-logo.ba1dea85.png\";","import React, { useState, useEffect, useRef } from 'react';\r\nimport * as pdfjsLib from 'pdfjs-dist/build/pdf';\r\nimport pdfjsWorker from 'pdfjs-dist/build/pdf.worker.entry';\r\nimport { savePdf } from '../services/pdfService';\r\nimport img from '../images/D-signature-logo.png';\r\n\r\npdfjsLib.GlobalWorkerOptions.workerSrc = pdfjsWorker;\r\n\r\nlet ctx;\r\nlet page;\r\nlet renderCtx;\r\nconst file = new FileReader();\r\n\r\n\r\nconst initialStyle = {\r\n    left: (window.innerWidth - 85) + 'px',\r\n    top: (window.innerHeight - 165) + 'px',\r\n    width: 80 + 'px',\r\n    height: 160 + 'px',\r\n}\r\n\r\n\r\nexport const CreatePdf = () => {\r\n    const canvasRef = useRef();\r\n    const fileName = useRef('file.png');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [link, setLink] = useState();\r\n    const [navPosition, setNavPosition] = useState(initialStyle);\r\n\r\n    useEffect(() => {\r\n        if (!window.visualViewport) return;\r\n        window.visualViewport.addEventListener(\"resize\", viewportHandler);\r\n        window.visualViewport.addEventListener(\"scroll\", viewportHandler);\r\n\r\n        return (() => {\r\n            window.visualViewport.removeEventListener(\"resize\", viewportHandler);\r\n            window.visualViewport.removeEventListener(\"scroll\", viewportHandler);\r\n        })\r\n    }, [])\r\n\r\n    const viewportHandler = (e) => {\r\n        const style = {\r\n            left: (e.target.width + e.target.offsetLeft - 85 * (1 / e.target.scale)) + 'px',\r\n            top: (e.target.height + e.target.offsetTop - 165 * (1 / e.target.scale)) + 'px',\r\n            width: 80 * (1 / e.target.scale) + 'px',\r\n            height: 160 * (1 / e.target.scale) + 'px',\r\n        }\r\n        setNavPosition(style);\r\n    }\r\n\r\n    useEffect(() => {\r\n        ctx = canvasRef.current.getContext('2d');\r\n    }, [canvasRef])\r\n\r\n    useEffect(() => {\r\n        if (!link) return;\r\n        if ('share' in navigator) window.open(`whatsapp://send?text=${encodeURIComponent(`${link} חתימה דיגיטלית`)}`)\r\n        else window.open(`https://web.whatsapp.com/send?text=${encodeURIComponent(`${link} חתימה דיגיטלית`)}`);\r\n    }, [link])\r\n\r\n    const handlePdf = async (e) => {\r\n        await setLink(null);\r\n        file.onload = () => {\r\n            fileName.current = e.target.files[0].name.split('.')[0];\r\n            onRenderCtx(file.result);\r\n        }\r\n\r\n\r\n        if (e.target.files.length) await file.readAsDataURL(e.target.files[0])\r\n    }\r\n\r\n    async function onRenderCtx(data) {\r\n        const doc = await pdfjsLib.getDocument(data).promise;\r\n        page = await doc.getPage(1);\r\n        const viewport = await page.getViewport({ scale: 2 });\r\n        canvasRef.current.height = viewport.height;\r\n        canvasRef.current.width = viewport.width;\r\n\r\n        renderCtx = {\r\n            canvasContext: ctx,\r\n            viewport\r\n        }\r\n\r\n        await page.render(renderCtx).promise;\r\n    }\r\n\r\n    async function onSavePdf() {\r\n        if (!file.result) return;\r\n        setIsLoading(true);\r\n        try {\r\n            const pdfToSave = { data: file.result, name: fileName.current }\r\n            const savedPdf = await savePdf(pdfToSave);\r\n            setLink(window.location.origin + '/preview/' + savedPdf._id);\r\n        }\r\n        finally {\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"create-pdf-container\">\r\n            <div className=\"nav-wrapper\" style={navPosition}>\r\n\r\n                <div className=\"actions flex column space-between\">\r\n                    <input className=\"pdf-input\" id=\"pdf-file-input\" type=\"file\" accept=\"application/pdf\" onChange={handlePdf} hidden />\r\n                    <label className=\"upload\" htmlFor=\"pdf-file-input\">\r\n                        <div />\r\n                    </label>\r\n                    <div className={`link ${isLoading ? 'loading' : ''}`} onClick={onSavePdf} />\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"canvas-container\">\r\n                <canvas ref={canvasRef} className=\"pdf-canvas\"></canvas>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport * as pdfjsLib from 'pdfjs-dist/build/pdf';\r\nimport pdfjsWorker from 'pdfjs-dist/build/pdf.worker.entry';\r\nimport { getPdf, savePdf } from '../services/pdfService';\r\n\r\npdfjsLib.GlobalWorkerOptions.workerSrc = pdfjsWorker;\r\n\r\nlet ctx;\r\nlet page;\r\nlet renderCtx;\r\n\r\nconst initialStyle = {\r\n    left: (window.innerWidth - 85) + 'px',\r\n    top: (window.innerHeight - 245) + 'px',\r\n    width: 80 + 'px',\r\n    height: 240 + 'px',\r\n}\r\n\r\nexport const EditPdf = (props) => {\r\n    const pdfId = props.match.params.id;\r\n    const loadedPdf = useRef();\r\n    const canvasRef = useRef();\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isEditMode, setIsEditMode] = useState(false);\r\n    const [navPosition, setNavPosition] = useState(initialStyle);\r\n    const [isPdfEdited, setIsPdfEdited] = useState();\r\n\r\n\r\n    useEffect(() => {\r\n        window.visualViewport.addEventListener(\"resize\", viewportHandler);\r\n        window.visualViewport.addEventListener(\"scroll\", viewportHandler);\r\n\r\n        return (() => {\r\n            window.visualViewport.removeEventListener(\"resize\", viewportHandler);\r\n            window.visualViewport.removeEventListener(\"scroll\", viewportHandler);\r\n        })\r\n    }, [])\r\n\r\n    const viewportHandler = (e) => {\r\n        const style = {\r\n            left: (e.target.width + e.target.offsetLeft - 85 * (1 / e.target.scale)) + 'px',\r\n            top: (e.target.height + e.target.offsetTop - 245 * (1 / e.target.scale)) + 'px',\r\n            width: 80 * (1 / e.target.scale) + 'px',\r\n            height: 240 * (1 / e.target.scale) + 'px',\r\n        }\r\n        setNavPosition(style);\r\n    }\r\n\r\n    useEffect(() => {\r\n        ctx = canvasRef.current.getContext('2d', { desynchronized: true });\r\n        onGetPdf();\r\n    }, [canvasRef])\r\n\r\n\r\n\r\n    async function onGetPdf() {\r\n        setIsLoading(true);\r\n        loadedPdf.current = await getPdf(pdfId);\r\n        if (!loadedPdf.current) return;\r\n        setIsPdfEdited(loadedPdf.current.edited);\r\n        onRenderCtx(loadedPdf.current.data);\r\n        setIsLoading(false);\r\n    }\r\n\r\n    async function onRenderCtx(data) {\r\n        if (!loadedPdf.current.edited) {\r\n            const doc = await pdfjsLib.getDocument(data).promise;\r\n            page = await doc.getPage(1);\r\n            const viewport = await page.getViewport({ scale: 2 });\r\n            canvasRef.current.height = viewport.height;\r\n            canvasRef.current.width = viewport.width;\r\n            renderCtx = {\r\n                canvasContext: ctx,\r\n                viewport\r\n            }\r\n            await page.render(renderCtx).promise;\r\n\r\n        } else {\r\n            const img = new Image;\r\n            img.onload = () => {\r\n                canvasRef.current.height = img.height;\r\n                canvasRef.current.width = img.width;\r\n                ctx.drawImage(img, 0, 0);\r\n            }\r\n            img.src = data;\r\n        }\r\n    }\r\n\r\n    function onToggleEditMode() {\r\n        if (!loadedPdf.current.edited) setIsEditMode((prev) => !prev);\r\n    }\r\n\r\n    function handleMouseDraw(e) {\r\n        if (e.nativeEvent.which !== 1 || !isEditMode) return;\r\n        const offsetX = e.nativeEvent.offsetX;\r\n        const offsetY = e.nativeEvent.offsetY;\r\n        draw(offsetX, offsetY);\r\n    }\r\n\r\n    function handleTouchDraw(e) {\r\n        if (e.touches.length !== 1 || !isEditMode) return;\r\n        var x = e.touches[0].clientX - e.touches[0].target.offsetLeft;\r\n        var y = e.touches[0].clientY - e.touches[0].target.offsetTop;\r\n        draw(x, y);\r\n    }\r\n\r\n    function draw(x, y) {\r\n        ctx.lineWidth = 5;\r\n        ctx.lineCap = 'round';\r\n        ctx.lineTo(x, y);\r\n        ctx.stroke();\r\n    }\r\n\r\n    function finishPosition() {\r\n        if (!isEditMode) return;\r\n        ctx.beginPath();\r\n    }\r\n\r\n    async function clearCanvas() {\r\n        if (!page || loadedPdf.current.edited) return;\r\n        ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n        await page.render(renderCtx).promise;\r\n    }\r\n\r\n\r\n    async function onUpdatePdf() {\r\n        if (!loadedPdf.current) return;\r\n        const data = canvasRef.current.toDataURL(\"image/png\");\r\n        setIsLoading(true);\r\n        setIsEditMode(false);\r\n        const updatedPdf = await savePdf({ ...loadedPdf.current, data });\r\n        loadedPdf.current = updatedPdf;\r\n        if (!loadedPdf.current) return;\r\n        setIsPdfEdited(loadedPdf.current.edited);\r\n        onRenderCtx(loadedPdf.current.data);\r\n        setIsLoading(false);\r\n\r\n\r\n        // function dataURLtoFile(dataurl, filename) {\r\n        //     let arr = dataurl.split(','),\r\n        //         mime = arr[0].match(/:(.*?);/)[1],\r\n        //         bstr = atob(arr[1]),\r\n        //         n = bstr.length,\r\n        //         u8arr = new Uint8Array(n);\r\n        //     console.log(u8arr);\r\n        //     while (n--) {\r\n        //         u8arr[n] = bstr.charCodeAt(n);\r\n        //     }\r\n        //     console.log(u8arr);\r\n        //     return new File([u8arr], filename, { type: mime });\r\n        // }\r\n\r\n\r\n        // const file = dataURLtoFile(data, fileName + '.png');\r\n        // console.log(file);\r\n        // const filesArray = [file];\r\n\r\n        // if (navigator.share) {\r\n        //     navigator.share({\r\n        //         files: filesArray,\r\n        //         text: fileName,\r\n        //     })\r\n        //         .then(() => console.log('Share was successful.'))\r\n        //         .catch((error) => console.log('Sharing failed', error));\r\n        // } else {\r\n        //     console.log(`Your system doesn't support sharing files.`);\r\n        // }\r\n\r\n    }\r\n\r\n    function onDownloadPdf() {\r\n        const fileName = (loadedPdf?.current?.name || 'קבלה') + '.png';\r\n        const a = document.createElement('a');\r\n        a.href = canvasRef.current.toDataURL();\r\n        a.download = fileName;\r\n        a.click();\r\n    }\r\n\r\n    return (\r\n        <div className=\"edit-pdf-container\">\r\n            <div className=\"nav-wrapper\" style={navPosition && { ...navPosition }}>\r\n                <div className={`actions flex column ${(isPdfEdited || isLoading) ? 'justify-end' : 'space-between'}`}>\r\n                    <button className={`edit ${isEditMode ? 'active' : ''}`} onClick={onToggleEditMode} hidden={isPdfEdited || isLoading} />\r\n                    <button className=\"reset\" onClick={clearCanvas} hidden={isPdfEdited || isLoading} />\r\n                    {!isPdfEdited ?\r\n                        <button className={`done ${isLoading ? 'loading' : ''}`} onClick={onUpdatePdf} /> :\r\n                        <>\r\n                            <div className=\"saved-successfuly flex align-center justify-center\" ><p style={{ fontSize: navPosition.width }}>נשמר בהצלחה!</p></div>\r\n                            <button className=\"download\" onClick={onDownloadPdf} />\r\n                        </>}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"canvas-container\">\r\n                <canvas ref={canvasRef} className=\"pdf-canvas\" onMouseDown={handleMouseDraw} onMouseMove={handleMouseDraw}\r\n                    onMouseUp={finishPosition} onTouchStart={handleTouchDraw} onTouchMove={handleTouchDraw}\r\n                    onTouchEnd={finishPosition} style={{ touchAction: isEditMode ? 'none' : 'auto' }}></canvas>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { CreatePdf } from './pages/CreatePdf';\nimport { EditPdf } from './pages/EditPdf';\n\n\n\nexport const App = () => {\n  return (\n    <div className=\"app-container\">\n      <div className=\"logo-container flex align-center\">\n        <div className=\"logo\" />\n      </div>\n      <Switch>\n        <Route component={EditPdf} path=\"/preview/:id\" />\n        <Route component={CreatePdf} path=\"/\" />\n      </Switch>\n    </div>\n  )\n}\n\n// TODOS:\n// Remove old files from DB\n// Start preview zoomed out\n// Loading info\n// Save successfuly info","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/global.scss';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}