{"version":3,"sources":["pages/CreatePdf.js","services/pdfService.js","pages/EditPdf.js","App.js","reportWebVitals.js","index.js"],"names":["ctx","page","renderCtx","axios","Axios","create","withCredentials","baseUrl","getPdf","id","get","then","res","data","savePdf","pdf","post","pdfjsLib","workerSrc","pdfjsWorker","loadedPdf","file","FileReader","CreatePdf","canvasRef","useRef","useState","isLoading","setIsLoading","link","setLink","useEffect","console","log","current","getContext","handlePdf","e","a","onload","onRenderCtx","result","target","files","readAsDataURL","promise","doc","getPage","getViewport","scale","viewport","height","width","canvasContext","render","pdfToSave","savedPdf","window","location","origin","_id","className","type","accept","onChange","hidden","htmlFor","onClick","ref","EditPdf","props","pdfId","match","params","isEditMode","setIsEditMode","startPosition","finishPosition","beginPath","draw","x","y","lineWidth","lineCap","lineTo","stroke","clearRect","onGetPdf","prev","filesArray","dataurl","filename","arr","split","mime","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","dataURLtoFile","toDataURL","navigator","canShare","share","title","text","catch","error","onMouseDown","onMouseMove","nativeEvent","which","offsetX","offsetY","onMouseUp","onTouchStart","onTouchMove","touches","clientX","offsetLeft","clientY","offsetTop","onTouchEnd","style","touchAction","App","component","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22711b56.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport * as pdfjsLib from 'pdfjs-dist/build/pdf';\r\nimport pdfjsWorker from 'pdfjs-dist/build/pdf.worker.entry';\r\nimport { savePdf } from '../services/pdfService';\r\n\r\npdfjsLib.GlobalWorkerOptions.workerSrc = pdfjsWorker;\r\n\r\nlet ctx;\r\nlet page;\r\nlet renderCtx;\r\nconst file = new FileReader();\r\nlet fileToSend;\r\n\r\n\r\n\r\nexport const CreatePdf = () => {\r\n    const canvasRef = useRef();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [link, setLink] = useState();\r\n\r\n    useEffect(() => {\r\n        console.log(canvasRef);\r\n        ctx = canvasRef.current.getContext('2d');\r\n    }, [canvasRef])\r\n\r\n    const handlePdf = async (e) => {\r\n        file.onload = () => {\r\n            onRenderCtx(file.result);\r\n            console.log(file);\r\n        }\r\n        fileToSend = e.target.files[0];\r\n        await file.readAsDataURL(e.target.files[0])\r\n    }\r\n\r\n    async function onRenderCtx(data) {\r\n        const doc = await pdfjsLib.getDocument(data).promise;\r\n        page = await doc.getPage(1);\r\n        const viewport = await page.getViewport({ scale: 2 });\r\n        canvasRef.current.height = viewport.height;\r\n        canvasRef.current.width = viewport.width;\r\n\r\n        renderCtx = {\r\n            canvasContext: ctx,\r\n            viewport\r\n        }\r\n\r\n        await page.render(renderCtx).promise;\r\n    }\r\n\r\n    async function onSavePdf() {\r\n        setIsLoading(true);\r\n        const pdfToSave = { data: file.result }\r\n        const savedPdf = await savePdf(pdfToSave);\r\n        setIsLoading(false);\r\n        setLink(window.location.origin + '/' + savedPdf._id);\r\n    }\r\n\r\n    return (\r\n        <div className=\"create-pdf-container\">\r\n\r\n            <div className=\"nav-wrapper\">\r\n                <input className=\"pdf-input\" id=\"pdf-file-input\" type=\"file\" accept=\"application/pdf\" onChange={handlePdf} hidden />\r\n                <div className=\"actions\">\r\n                    <label htmlFor=\"pdf-file-input\">UPLOAD</label>\r\n                    <button onClick={onSavePdf}>GET LINK</button>\r\n                </div>\r\n                {isLoading && <p>Loading...</p>}\r\n                {link && <p>{link}</p>}\r\n\r\n            </div>\r\n            <canvas ref={canvasRef} className=\"pdf-canvas\"></canvas>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import Axios from 'axios';\r\nconst axios = Axios.create({ withCredentials: true });\r\nconst baseUrl = process.env.NODE_ENV === 'production' ? '/api/pdf' : 'http://localhost:3030/api/pdf';\r\n\r\nexport function getPdf(id) {\r\n    return axios.get(`${baseUrl}/${id}`).then(res => res.data);\r\n}\r\n\r\nexport function savePdf(pdf) {\r\n    return axios.post(baseUrl, pdf).then(res => res.data);\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\nimport * as pdfjsLib from 'pdfjs-dist/build/pdf';\r\nimport pdfjsWorker from 'pdfjs-dist/build/pdf.worker.entry';\r\nimport { getPdf, savePdf } from '../services/pdfService';\r\n\r\npdfjsLib.GlobalWorkerOptions.workerSrc = pdfjsWorker;\r\n\r\nlet ctx;\r\nlet page;\r\nlet renderCtx;\r\nlet loadedPdf;\r\n\r\n\r\nexport const EditPdf = (props) => {\r\n    const pdfId = props.match.params.id;\r\n    const canvasRef = useRef();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isEditMode, setIsEditMode] = useState(false);\r\n\r\n    useEffect(() => {\r\n        console.log(canvasRef);\r\n        ctx = canvasRef.current.getContext('2d');\r\n        onGetPdf();\r\n        console.log(props);\r\n    }, [canvasRef])\r\n\r\n    async function onGetPdf() {\r\n        setIsLoading(true);\r\n        loadedPdf = await getPdf(pdfId);\r\n        setIsLoading(false);\r\n        if (!loadedPdf) return;\r\n        onRenderCtx(loadedPdf.data)\r\n    }\r\n\r\n    async function onRenderCtx(data) {\r\n        const doc = await pdfjsLib.getDocument(data).promise;\r\n        page = await doc.getPage(1);\r\n        const viewport = await page.getViewport({ scale: 2 });\r\n        canvasRef.current.height = viewport.height;\r\n        canvasRef.current.width = viewport.width;\r\n        renderCtx = {\r\n            canvasContext: ctx,\r\n            viewport\r\n        }\r\n        await page.render(renderCtx).promise;\r\n    }\r\n\r\n    function startPosition() {\r\n        if (!isEditMode) return;\r\n    }\r\n\r\n    function finishPosition() {\r\n        if (!isEditMode) return;\r\n        ctx.beginPath();\r\n    }\r\n\r\n    function handleMouseMove(e) {\r\n        if (e.nativeEvent.which !== 1 || !isEditMode) return;\r\n        const offsetX = e.nativeEvent.offsetX;\r\n        const offsetY = e.nativeEvent.offsetY;\r\n        draw(offsetX, offsetY);\r\n    }\r\n\r\n    function handleTouchMove(e) {\r\n        if (e.touches.length !== 1 || !isEditMode) return;\r\n        var x = e.touches[0].clientX - e.touches[0].target.offsetLeft;\r\n        var y = e.touches[0].clientY - e.touches[0].target.offsetTop;\r\n        draw(x, y);\r\n    }\r\n\r\n    function draw(x, y) {\r\n        ctx.lineWidth = 5;\r\n        ctx.lineCap = 'round';\r\n        ctx.lineTo(x, y);\r\n        ctx.stroke();\r\n    }\r\n\r\n    async function clearCanvas() {\r\n        if (!page) return;\r\n        ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n        await page.render(renderCtx).promise;\r\n    }\r\n\r\n\r\n    function getWhatsappHref() {\r\n\r\n        let data = canvasRef.current.toDataURL(\"image/png\");\r\n\r\n        function dataURLtoFile(dataurl, filename) {\r\n            let arr = dataurl.split(','),\r\n                mime = arr[0].match(/:(.*?);/)[1],\r\n                bstr = atob(arr[1]),\r\n                n = bstr.length,\r\n                u8arr = new Uint8Array(n);\r\n            while (n--) {\r\n                u8arr[n] = bstr.charCodeAt(n);\r\n            }\r\n            return new File([u8arr], filename, { type: mime });\r\n        }\r\n\r\n        const file = dataURLtoFile(data, 'Testttttt.png');\r\n        const filesArray = [file];\r\n\r\n        if (navigator.canShare && navigator.canShare({ files: filesArray })) {\r\n            navigator.share({\r\n                files: filesArray,\r\n                title: 'Pictures',\r\n                text: 'Our Pictures.',\r\n            })\r\n                .then(() => console.log('Share was successful.'))\r\n                .catch((error) => console.log('Sharing failed', error));\r\n        } else {\r\n            console.log(`Your system doesn't support sharing files.`);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"edit-pdf-container\">\r\n\r\n            <div className=\"nav-wrapper\">\r\n                <div>\r\n                    <button onClick={() => setIsEditMode((prev) => !prev)}>EDIT</button>\r\n                    <button onClick={clearCanvas}>CLEAR</button>\r\n                    <h3>{isEditMode ? 'yes' : 'no'}</h3>\r\n                    <button onClick={getWhatsappHref}>SEND</button>\r\n                </div>\r\n            </div>\r\n\r\n            <canvas ref={canvasRef} className=\"pdf-canvas\" onMouseDown={startPosition} onMouseMove={handleMouseMove}\r\n                onMouseUp={finishPosition} onTouchStart={startPosition} onTouchMove={handleTouchMove}\r\n                onTouchEnd={finishPosition} style={{ touchAction: isEditMode ? 'none' : 'auto' }}></canvas>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { CreatePdf } from './pages/CreatePdf';\nimport { EditPdf } from './pages/EditPdf';\n\n\n\nexport const App = () => {\n  return (\n    <div className=\"app-container\">\n      <Switch>\n        <Route component={EditPdf} path=\"/:id\" />\n        <Route component={CreatePdf} path=\"/\" />\n      </Switch>\n    </div>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/global.scss';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}