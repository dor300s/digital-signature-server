{"version":3,"sources":["pages/CreatePdf.js","services/pdfService.js","pages/EditPdf.js","App.js","reportWebVitals.js","index.js"],"names":["ctx","page","renderCtx","axios","Axios","create","withCredentials","baseUrl","getPdf","id","get","then","res","data","savePdf","pdf","_id","put","post","pdfjsLib","workerSrc","pdfjsWorker","file","FileReader","initialStyle","left","window","innerWidth","top","innerHeight","width","height","inputWidth","inputHeight","inputFontSize","CreatePdf","canvasRef","useRef","fileName","useState","isLoading","setIsLoading","link","setLink","navPosition","setNavPosition","phoneNumber","setPhoneNumber","isPdfLoaded","setIsPdfLoaded","useEffect","visualViewport","addEventListener","viewportHandler","removeEventListener","e","style","target","offsetLeft","scale","offsetTop","current","getContext","number","slice","navigator","open","encodeURIComponent","handlePdf","a","onload","files","name","split","onRenderCtx","result","length","readAsDataURL","promise","doc","getPage","getViewport","viewport","canvasContext","render","pdfToSave","savedPdf","location","origin","className","type","accept","onChange","hidden","htmlFor","onClick","pattern","value","maxLength","placeholder","fontSize","replace","ref","EditPdf","props","pdfId","match","params","loadedPdf","isEditMode","setIsEditMode","isPdfEdited","setIsPdfEdited","isTherePdf","setIsTherePdf","edited","img","Image","drawImage","src","document","body","zoom","handleMouseDraw","nativeEvent","which","draw","offsetX","offsetY","handleTouchDraw","touches","clientX","clientY","x","y","lineWidth","lineCap","lineTo","stroke","finishPosition","beginPath","clearRect","toDataURL","updatedPdf","desynchronized","onGetPdf","prev","createElement","href","download","click","onMouseDown","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","touchAction","App","component","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2df1a6b7.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport * as pdfjsLib from 'pdfjs-dist/build/pdf';\r\nimport pdfjsWorker from 'pdfjs-dist/build/pdf.worker.entry';\r\nimport { savePdf } from '../services/pdfService';\r\n\r\npdfjsLib.GlobalWorkerOptions.workerSrc = pdfjsWorker;\r\n\r\nlet ctx;\r\nlet page;\r\nlet renderCtx;\r\nconst file = new FileReader();\r\n\r\nconst linkText = ``;\r\n// const linkText = `\r\n// לקוח יקר,\r\n// זו הזמנת המקלחון החדש שלך ב אא מקלחונים אנא פתח את הקישור הכחול .\r\n// לחץ על העיפרון (יהפוך לירוק) חתימה על המסך ואז בV לשליחה.\r\n// תתחדשו`;\r\n\r\nconst initialStyle = {\r\n    left: (window.innerWidth - 85) + 'px',\r\n    top: (window.innerHeight - 165) + 'px',\r\n    width: 80 + 'px',\r\n    height: 160 + 'px',\r\n    inputWidth: 200 + 'px',\r\n    inputHeight: 50 + 'px',\r\n    inputFontSize: 25 + 'px'\r\n}\r\n\r\n\r\nexport const CreatePdf = () => {\r\n    const canvasRef = useRef();\r\n    const fileName = useRef('file.png');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [link, setLink] = useState();\r\n    const [navPosition, setNavPosition] = useState(initialStyle);\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    const [isPdfLoaded, setIsPdfLoaded] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        if (!window.visualViewport) return;\r\n        window.visualViewport.addEventListener(\"resize\", viewportHandler);\r\n        window.visualViewport.addEventListener(\"scroll\", viewportHandler);\r\n\r\n        return (() => {\r\n            window.visualViewport.removeEventListener(\"resize\", viewportHandler);\r\n            window.visualViewport.removeEventListener(\"scroll\", viewportHandler);\r\n        })\r\n    }, [])\r\n\r\n    const viewportHandler = (e) => {\r\n        const style = {\r\n            left: (e.target.width + e.target.offsetLeft - 85 * (1 / e.target.scale)) + 'px',\r\n            top: (e.target.height + e.target.offsetTop - 165 * (1 / e.target.scale)) + 'px',\r\n            width: 80 * (1 / e.target.scale) + 'px',\r\n            height: 160 * (1 / e.target.scale) + 'px',\r\n            inputWidth: 200 * (1 / e.target.scale) + 'px',\r\n            inputHeight: 50 * (1 / e.target.scale) + 'px',\r\n            inputFontSize: 25 * (1 / e.target.scale) + 'px'\r\n        }\r\n        setNavPosition(style);\r\n    }\r\n\r\n    useEffect(() => {\r\n        ctx = canvasRef.current.getContext('2d');\r\n    }, [canvasRef])\r\n\r\n    useEffect(() => {\r\n        if (!link) return;\r\n        const number = phoneNumber ? `/972${phoneNumber.slice(1)}` : '';\r\n        if ('share' in navigator || number) window.open(`https://wa.me${number}/?text=${encodeURIComponent(link + ' ' + linkText)}`);\r\n        else window.open(`https://web.whatsapp.com/send?text=${encodeURIComponent(link + ' ' + linkText)}`);\r\n    }, [link])\r\n\r\n    const handlePdf = async (e) => {\r\n        await setLink(null);\r\n        file.onload = () => {\r\n            fileName.current = e.target.files[0].name.split('.')[0];\r\n            onRenderCtx(file.result);\r\n            setIsPdfLoaded(true);\r\n        }\r\n\r\n\r\n        if (e.target.files.length) await file.readAsDataURL(e.target.files[0])\r\n    }\r\n\r\n    async function onRenderCtx(data) {\r\n        const doc = await pdfjsLib.getDocument(data).promise;\r\n        page = await doc.getPage(1);\r\n        const viewport = await page.getViewport({ scale: 2 });\r\n        canvasRef.current.height = viewport.height;\r\n        canvasRef.current.width = viewport.width;\r\n\r\n        renderCtx = {\r\n            canvasContext: ctx,\r\n            viewport\r\n        }\r\n\r\n        await page.render(renderCtx).promise;\r\n    }\r\n\r\n    async function onSavePdf() {\r\n        if (!file.result) return;\r\n        setIsLoading(true);\r\n        try {\r\n            const pdfToSave = { data: file.result, name: fileName.current }\r\n            const savedPdf = await savePdf(pdfToSave);\r\n            setLink(window.location.origin + '/preview/' + savedPdf._id);\r\n        }\r\n        finally {\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"create-pdf-container\">\r\n            <div className=\"nav-wrapper\" style={navPosition}>\r\n\r\n                <div className=\"actions flex column space-between\">\r\n                    <input className=\"pdf-input\" id=\"pdf-file-input\" type=\"file\" accept=\"application/pdf\" onChange={handlePdf} hidden />\r\n                    < label className={`upload ${isPdfLoaded ? '' : 'no-file-selected'}`} htmlFor=\"pdf-file-input\">\r\n                        <div />\r\n                    </label>\r\n                    <div className={`link ${isLoading ? 'loading' : ''}`} onClick={onSavePdf} />\r\n                    <input\r\n                        className=\"phone-number\"\r\n                        pattern=\"[0-9]{9-10}\"\r\n                        value={phoneNumber}\r\n                        maxLength=\"10\"\r\n                        // placeholder=\"מספר טלפון\"\r\n                        placeholder=\"Phone number (optional)\"\r\n                        type=\"tel\"\r\n                        style={{ width: navPosition.inputWidth, height: navPosition.inputHeight, fontSize: navPosition.inputFontSize }}\r\n                        onChange={(e) => setPhoneNumber(e.target.value.replace(/[^\\d]/, ''))}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"canvas-container\" >\r\n                <canvas ref={canvasRef} className=\"pdf-canvas\" hidden={!isPdfLoaded}></canvas>\r\n            </div>\r\n            <label className=\"no-pdf-file-message\" htmlFor=\"pdf-file-input\" hidden={isPdfLoaded}>Please select PDF file</label>\r\n            {/* <div className=\"no-pdf-file-message\" hidden={isPdfLoaded}>PDF אנא בחר קובץ</div> */}\r\n        </div>\r\n    );\r\n}\r\n","import Axios from 'axios';\r\nconst axios = Axios.create({ withCredentials: true });\r\nconst baseUrl = process.env.NODE_ENV === 'production' ? '/api/pdf' : 'http://localhost:3030/api/pdf';\r\n\r\nexport function getPdf(id) {\r\n    return axios.get(`${baseUrl}/${id}`).then(res => res.data);\r\n}\r\n\r\nexport function savePdf(pdf) {\r\n    return !pdf._id ?\r\n        axios.post(baseUrl, pdf).then(res => res.data) :\r\n        axios.put(baseUrl, pdf).then(res => res.data);\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport * as pdfjsLib from 'pdfjs-dist/build/pdf';\r\nimport pdfjsWorker from 'pdfjs-dist/build/pdf.worker.entry';\r\nimport { getPdf, savePdf } from '../services/pdfService';\r\n\r\npdfjsLib.GlobalWorkerOptions.workerSrc = pdfjsWorker;\r\n\r\nlet ctx;\r\nlet page;\r\nlet renderCtx;\r\n\r\nconst initialStyle = {\r\n    left: (window.innerWidth - 85) + 'px',\r\n    top: (window.innerHeight - 245) + 'px',\r\n    width: 80 + 'px',\r\n    height: 240 + 'px',\r\n}\r\n\r\nexport const EditPdf = (props) => {\r\n    const pdfId = props.match.params.id;\r\n    const loadedPdf = useRef();\r\n    const canvasRef = useRef();\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isEditMode, setIsEditMode] = useState(false);\r\n    const [navPosition, setNavPosition] = useState(initialStyle);\r\n    const [isPdfEdited, setIsPdfEdited] = useState();\r\n    const [isTherePdf, setIsTherePdf] = useState(true);\r\n\r\n\r\n    useEffect(() => {\r\n        window.visualViewport.addEventListener(\"resize\", viewportHandler);\r\n        window.visualViewport.addEventListener(\"scroll\", viewportHandler);\r\n\r\n        return (() => {\r\n            window.visualViewport.removeEventListener(\"resize\", viewportHandler);\r\n            window.visualViewport.removeEventListener(\"scroll\", viewportHandler);\r\n        })\r\n    }, [])\r\n\r\n    const viewportHandler = (e) => {\r\n        const style = {\r\n            left: (e.target.width + e.target.offsetLeft - 85 * (1 / e.target.scale)) + 'px',\r\n            top: (e.target.height + e.target.offsetTop - 245 * (1 / e.target.scale)) + 'px',\r\n            width: 80 * (1 / e.target.scale) + 'px',\r\n            height: 240 * (1 / e.target.scale) + 'px',\r\n        }\r\n        setNavPosition(style);\r\n    }\r\n\r\n    useEffect(() => {\r\n        ctx = canvasRef.current.getContext('2d', { desynchronized: true });\r\n        onGetPdf();\r\n    }, [canvasRef])\r\n\r\n    async function onGetPdf() {\r\n        setIsLoading(true);\r\n        try {\r\n            loadedPdf.current = await getPdf(pdfId);\r\n            // if (!loadedPdf.current) {\r\n\r\n            // }\r\n            setIsPdfEdited(loadedPdf.current.edited);\r\n            onRenderCtx(loadedPdf.current.data);\r\n            setIsLoading(false);\r\n        } catch (err) {\r\n            setIsTherePdf(false);\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n    }\r\n\r\n    async function onRenderCtx(data) {\r\n        if (!loadedPdf.current.edited) {\r\n            const doc = await pdfjsLib.getDocument(data).promise;\r\n            page = await doc.getPage(1);\r\n            const viewport = await page.getViewport({ scale: 2 });\r\n            canvasRef.current.height = viewport.height;\r\n            canvasRef.current.width = viewport.width;\r\n            renderCtx = {\r\n                canvasContext: ctx,\r\n                viewport\r\n            }\r\n            await page.render(renderCtx).promise;\r\n\r\n        } else {\r\n            const img = new Image;\r\n            img.onload = () => {\r\n                canvasRef.current.height = img.height;\r\n                canvasRef.current.width = img.width;\r\n                ctx.drawImage(img, 0, 0);\r\n            }\r\n            img.src = data;\r\n        }\r\n        document.body.style.zoom = 1.0\r\n    }\r\n\r\n    function onToggleEditMode() {\r\n        if (!loadedPdf.current.edited) setIsEditMode((prev) => !prev);\r\n    }\r\n\r\n    function handleMouseDraw(e) {\r\n        if (e.nativeEvent.which !== 1 || !isEditMode) return;\r\n        const offsetX = e.nativeEvent.offsetX;\r\n        const offsetY = e.nativeEvent.offsetY;\r\n        draw(offsetX, offsetY);\r\n    }\r\n\r\n    function handleTouchDraw(e) {\r\n        if (e.touches.length !== 1 || !isEditMode) return;\r\n        var x = e.touches[0].clientX - e.touches[0].target.offsetLeft;\r\n        var y = e.touches[0].clientY - e.touches[0].target.offsetTop;\r\n        draw(x, y);\r\n    }\r\n\r\n    function draw(x, y) {\r\n        ctx.lineWidth = 5;\r\n        ctx.lineCap = 'round';\r\n        ctx.lineTo(x, y);\r\n        ctx.stroke();\r\n    }\r\n\r\n    function finishPosition() {\r\n        if (!isEditMode) return;\r\n        ctx.beginPath();\r\n    }\r\n\r\n    async function clearCanvas() {\r\n        if (!page || loadedPdf.current.edited) return;\r\n        ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n        await page.render(renderCtx).promise;\r\n    }\r\n\r\n\r\n    async function onUpdatePdf() {\r\n        if (!loadedPdf.current) return;\r\n        const data = canvasRef.current.toDataURL(\"image/png\");\r\n        setIsLoading(true);\r\n        setIsEditMode(false);\r\n        const updatedPdf = await savePdf({ ...loadedPdf.current, data });\r\n        loadedPdf.current = updatedPdf;\r\n        if (!loadedPdf.current) return;\r\n        setIsPdfEdited(loadedPdf.current.edited);\r\n        onRenderCtx(loadedPdf.current.data);\r\n        setIsLoading(false);\r\n\r\n\r\n        // function dataURLtoFile(dataurl, filename) {\r\n        //     let arr = dataurl.split(','),\r\n        //         mime = arr[0].match(/:(.*?);/)[1],\r\n        //         bstr = atob(arr[1]),\r\n        //         n = bstr.length,\r\n        //         u8arr = new Uint8Array(n);\r\n        //     while (n--) {\r\n        //         u8arr[n] = bstr.charCodeAt(n);\r\n        //     }\r\n        //     return new File([u8arr], filename, { type: mime });\r\n        // }\r\n\r\n\r\n\r\n        // const file = dataURLtoFile(data, fileName + '.png');\r\n        // console.log(file);\r\n        // const filesArray = [file];\r\n\r\n        // if (navigator.share) {\r\n        //     navigator.share({\r\n        //         files: filesArray,\r\n        //         text: fileName,\r\n        //     })\r\n        //         .then(() => console.log('Share was successful.'))\r\n        //         .catch((error) => console.log('Sharing failed', error));\r\n        // } else {\r\n        //     console.log(`Your system doesn't support sharing files.`);\r\n        // }\r\n\r\n    }\r\n\r\n    function onDownloadPdf() {\r\n        // const fileName = (loadedPdf?.current?.name || 'קבלה') + '.png';\r\n        const fileName = (loadedPdf?.current?.name || 'pdf') + '.png';\r\n        const a = document.createElement('a');\r\n        a.href = canvasRef.current.toDataURL();\r\n        a.download = fileName;\r\n        a.click();\r\n    }\r\n\r\n    return (\r\n        <div className=\"edit-pdf-container\">\r\n            <div className=\"nav-wrapper\" style={navPosition && { ...navPosition }}>\r\n                <div className={`actions flex column ${(isPdfEdited || isLoading) ? 'justify-end' : 'space-between'}`}>\r\n                    <button className={`edit ${isEditMode ? 'active' : ''}`} onClick={onToggleEditMode} hidden={isPdfEdited || isLoading} />\r\n                    <button className=\"reset\" onClick={clearCanvas} hidden={isPdfEdited || isLoading} />\r\n                    {!isPdfEdited ?\r\n                        <button className={`done ${isLoading ? 'loading' : ''}`} onClick={onUpdatePdf} /> :\r\n                        <>\r\n                            {/* <div className=\"saved-successfuly flex align-center justify-center\" ><p style={{ fontSize: navPosition.width }}>נשמר בהצלחה!</p></div> */}\r\n                            <div className=\"saved-successfuly flex align-center justify-center\" ><p style={{ fontSize: navPosition.width }}>Saved!</p></div>\r\n                            <button className=\"download\" onClick={onDownloadPdf} />\r\n                        </>}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"canvas-container\">\r\n                <canvas ref={canvasRef} className=\"pdf-canvas\" onMouseDown={handleMouseDraw} onMouseMove={handleMouseDraw}\r\n                    onMouseUp={finishPosition} onTouchStart={handleTouchDraw} onTouchMove={handleTouchDraw}\r\n                    onTouchEnd={finishPosition} style={{ touchAction: isEditMode ? 'none' : 'auto' }}></canvas>\r\n            </div>\r\n\r\n            {/* {!isTherePdf && <div className=\"no-pdf-file-message\">לא נמצא PDF קובץ</div>} */}\r\n            {!isTherePdf && <div className=\"no-pdf-file-message\">PDF not found</div>}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { CreatePdf } from './pages/CreatePdf';\nimport { EditPdf } from './pages/EditPdf';\n\n\n\nexport const App = () => {\n  return (\n    <div className=\"app-container\">\n      <div className=\"logo-container flex align-center\">\n        <div className=\"logo\" />\n      </div>\n      <Switch>\n        <Route component={EditPdf} path=\"/preview/:id\" />\n        <Route component={CreatePdf} path=\"/\" />\n      </Switch>\n    </div>\n  )\n}\n\n// TODOS:\n// Remove old files from DB\n// Start preview zoomed out","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/global.scss';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}