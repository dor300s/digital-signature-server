{"version":3,"sources":["pages/CreatePdf.js","services/pdfService.js","pages/EditPdf.js","App.js","reportWebVitals.js","index.js"],"names":["ctx","page","renderCtx","axios","Axios","create","withCredentials","baseUrl","getPdf","id","get","then","res","data","savePdf","pdf","post","pdfjsLib","workerSrc","pdfjsWorker","file","FileReader","initialStyle","left","window","innerWidth","top","innerHeight","width","height","CreatePdf","canvasRef","useRef","fileName","useState","isLoading","setIsLoading","link","setLink","navPosition","setNavPosition","useEffect","visualViewport","addEventListener","viewportHandler","removeEventListener","e","style","target","offsetLeft","scale","offsetTop","current","getContext","navigator","clipboard","writeText","handlePdf","a","onload","files","name","split","onRenderCtx","result","length","readAsDataURL","promise","doc","getPage","getViewport","viewport","canvasContext","render","pdfToSave","savedPdf","location","origin","_id","className","type","accept","onChange","hidden","htmlFor","onClick","ref","EditPdf","props","pdfId","match","params","loadedPdf","isEditMode","setIsEditMode","startPosition","finishPosition","beginPath","draw","x","y","lineWidth","lineCap","lineTo","stroke","clearRect","onGetPdf","prev","toDataURL","filesArray","dataurl","filename","arr","mime","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","dataURLtoFile","share","text","console","log","catch","error","onMouseDown","onMouseMove","nativeEvent","which","offsetX","offsetY","onMouseUp","onTouchStart","onTouchMove","touches","clientX","clientY","onTouchEnd","touchAction","App","component","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"0QAOIA,EACAC,EACAC,E,uHCREC,E,OAAQC,EAAMC,OAAO,CAAEC,iBAAiB,IACxCC,EAAkD,WAEjD,SAASC,EAAOC,GACnB,OAAON,EAAMO,IAAN,UAAaH,EAAb,YAAwBE,IAAME,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAGlD,SAASC,EAAQC,GACpB,OAAOZ,EAAMa,KAAKT,EAASQ,GAAKJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QDJpDI,sBAA6BC,UAAYC,IAKzC,IEHInB,EACAC,EACAC,EFCEkB,EAAO,IAAIC,WAGXC,EAAe,CACjBC,KAAOC,OAAOC,WAAa,GAAM,KACjCC,IAAMF,OAAOG,YAAc,IAAO,KAClCC,MAAO,OACPC,OAAQ,SAGCC,EAAY,WACrB,IAAMC,EAAYC,mBACZC,EAAWD,iBAAO,YAFG,EAGOE,oBAAS,GAHhB,mBAGpBC,EAHoB,KAGTC,EAHS,OAIHF,qBAJG,mBAIpBG,EAJoB,KAIdC,EAJc,OAKWJ,mBAASZ,GALpB,mBAKpBiB,EALoB,KAKPC,EALO,KAO3BC,qBAAU,WACN,GAAKjB,OAAOkB,eAIZ,OAHAlB,OAAOkB,eAAeC,iBAAiB,SAAUC,GACjDpB,OAAOkB,eAAeC,iBAAiB,SAAUC,GAEzC,WACJpB,OAAOkB,eAAeG,oBAAoB,SAAUD,GACpDpB,OAAOkB,eAAeG,oBAAoB,SAAUD,MAEzD,IAEH,IAAMA,EAAkB,SAACE,GACrB,IAAMC,EAAQ,CACVxB,KAAOuB,EAAEE,OAAOpB,MAAQkB,EAAEE,OAAOC,WAAmB,EAAIH,EAAEE,OAAOE,MAAnB,GAA6B,KAC3ExB,IAAMoB,EAAEE,OAAOnB,OAASiB,EAAEE,OAAOG,UAAmB,EAAIL,EAAEE,OAAOE,MAApB,IAA8B,KAC3EtB,MAAa,EAAIkB,EAAEE,OAAOE,MAAnB,GAA4B,KACnCrB,OAAe,EAAIiB,EAAEE,OAAOE,MAApB,IAA6B,MAEzCV,EAAeO,IAGnBN,qBAAU,WACNzC,EAAM+B,EAAUqB,QAAQC,WAAW,QACpC,CAACtB,IAEJU,qBAAU,WACFJ,GAAMiB,UAAUC,UAAUC,UAAUnB,KACzC,CAACA,IAEJ,IAAMoB,EAAS,uCAAG,WAAOX,GAAP,SAAAY,EAAA,yDACdpB,EAAQ,MACRlB,EAAKuC,OAAS,WAEV1B,EAASmB,QAAUN,EAAEE,OAAOY,MAAM,GAAGC,KAAKC,MAAM,KAAK,GACrDC,EAAY3C,EAAK4C,UAEjBlB,EAAEE,OAAOY,MAAMK,OAPL,gCAOmB7C,EAAK8C,cAAcpB,EAAEE,OAAOY,MAAM,IAPrD,2CAAH,sDApCY,SA8CZG,EA9CY,8EA8C3B,WAA2BlD,GAA3B,iBAAA6C,EAAA,sEACsBzC,cAAqBJ,GAAMsD,QADjD,cACUC,EADV,gBAEiBA,EAAIC,QAAQ,GAF7B,cAEIpE,EAFJ,gBAG2BA,EAAKqE,YAAY,CAAEpB,MAAO,IAHrD,cAGUqB,EAHV,OAIIxC,EAAUqB,QAAQvB,OAAS0C,EAAS1C,OACpCE,EAAUqB,QAAQxB,MAAQ2C,EAAS3C,MAEnC1B,EAAY,CACRsE,cAAexE,EACfuE,YATR,UAYUtE,EAAKwE,OAAOvE,GAAWiE,QAZjC,6CA9C2B,kEA6D3B,8BAAAT,EAAA,yDACStC,EAAK4C,OADd,wDAEI5B,GAAa,GAFjB,SAIcsC,EAAY,CAAE7D,KAAMO,EAAK4C,OAAQH,KAAM5B,EAASmB,SAJ9D,SAK+BtC,EAAQ4D,GALvC,OAKcC,EALd,OAMQrC,EAAQd,OAAOoD,SAASC,OAAS,IAAMF,EAASG,KANxD,uBASQ1C,GAAa,GATrB,0EA7D2B,sBA0E3B,OACI,sBAAK2C,UAAU,uBAAf,UACI,qBAAKA,UAAU,cAAchC,MAAOR,EAApC,SACI,sBAAKwC,UAAU,oCAAf,UACI,uBAAOA,UAAU,YAAYtE,GAAG,iBAAiBuE,KAAK,OAAOC,OAAO,kBAAkBC,SAAUzB,EAAW0B,QAAM,IACjH,uBAAOJ,UAAU,SAASK,QAAQ,iBAAlC,SACI,0BAEJ,qBAAKL,UAAS,eAAU5C,EAAY,UAAYE,EAAO,SAAW,IAAMgD,QAlF7D,kDAsFnB,qBAAKN,UAAU,mBAAf,SACI,wBAAQO,IAAKvD,EAAWgD,UAAU,qB,QEtGlD9D,sBAA6BC,UAAYC,IAMzC,IAAMG,EAAe,CACjBC,KAAOC,OAAOC,WAAa,GAAM,KACjCC,IAAMF,OAAOG,YAAc,IAAO,KAClCC,MAAO,OACPC,OAAQ,SAGC0D,EAAU,SAACC,GACpB,IAAMC,EAAQD,EAAME,MAAMC,OAAOlF,GAC3BmF,EAAY5D,mBACZD,EAAYC,mBAHY,EAKIE,oBAAS,GALb,mBAKZE,GALY,aAMMF,oBAAS,GANf,mBAMvB2D,EANuB,KAMXC,EANW,OAOQ5D,mBAASZ,GAPjB,mBAOvBiB,EAPuB,KAOVC,EAPU,KAU9BC,qBAAU,WAIN,OAHAjB,OAAOkB,eAAeC,iBAAiB,SAAUC,GACjDpB,OAAOkB,eAAeC,iBAAiB,SAAUC,GAEzC,WACJpB,OAAOkB,eAAeG,oBAAoB,SAAUD,GACpDpB,OAAOkB,eAAeG,oBAAoB,SAAUD,MAEzD,IAEH,IAAMA,EAAkB,SAACE,GACrB,IAAMC,EAAQ,CACVxB,KAAOuB,EAAEE,OAAOpB,MAAQkB,EAAEE,OAAOC,WAAmB,EAAIH,EAAEE,OAAOE,MAAnB,GAA6B,KAC3ExB,IAAMoB,EAAEE,OAAOnB,OAASiB,EAAEE,OAAOG,UAAmB,EAAIL,EAAEE,OAAOE,MAApB,IAA8B,KAC3EtB,MAAa,EAAIkB,EAAEE,OAAOE,MAAnB,GAA4B,KACnCrB,OAAe,EAAIiB,EAAEE,OAAOE,MAApB,IAA6B,MAEzCV,EAAeO,IA3BW,4CAmC9B,sBAAAW,EAAA,6DACItB,GAAa,GADjB,SAE8B5B,EAAOiF,GAFrC,UAEIG,EAAUxC,QAFd,OAGIhB,GAAa,GACRwD,EAAUxC,QAJnB,iDAKIW,EAAY6B,EAAUxC,QAAQvC,MALlC,4CAnC8B,+BA2CfkD,EA3Ce,8EA2C9B,WAA2BlD,GAA3B,iBAAA6C,EAAA,sEACsBzC,cAAqBJ,GAAMsD,QADjD,cACUC,EADV,gBAEiBA,EAAIC,QAAQ,GAF7B,cAEIpE,EAFJ,gBAG2BA,EAAKqE,YAAY,CAAEpB,MAAO,IAHrD,cAGUqB,EAHV,OAIIxC,EAAUqB,QAAQvB,OAAS0C,EAAS1C,OACpCE,EAAUqB,QAAQxB,MAAQ2C,EAAS3C,MACnC1B,EAAY,CACRsE,cAAexE,EACfuE,YARR,UAUUtE,EAAKwE,OAAOvE,GAAWiE,QAVjC,6CA3C8B,sBAwD9B,SAAS4B,KAIT,SAASC,IACAH,GACL7F,EAAIiG,YAiBR,SAASC,EAAKC,EAAGC,GACbpG,EAAIqG,UAAY,EAChBrG,EAAIsG,QAAU,QACdtG,EAAIuG,OAAOJ,EAAGC,GACdpG,EAAIwG,SAnFsB,4CAsF9B,sBAAA9C,EAAA,yDACSzD,EADT,wDAEID,EAAIyG,UAAU,EAAG,EAAG1E,EAAUqB,QAAQxB,MAAOG,EAAUqB,QAAQvB,QAFnE,SAGU5B,EAAKwE,OAAOvE,GAAWiE,QAHjC,4CAtF8B,sBA8H9B,OAhGA1B,qBAAU,WACNzC,EAAM+B,EAAUqB,QAAQC,WAAW,MA/BT,mCAgC1BqD,KACD,CAAC3E,IA8FA,sBAAKgD,UAAU,qBAAf,UAEI,qBAAKA,UAAU,cAAchC,MAAOR,GAAW,eAASA,GAAxD,SACI,sBAAKwC,UAAU,oCAAf,UACI,wBAAQA,UAAS,eAAUc,EAAa,SAAW,IAAMR,QAAS,kBAAMS,GAAc,SAACa,GAAD,OAAWA,QACjG,wBAAQ5B,UAAU,QAAQM,QApIZ,6CAqId,wBAAQN,UAAU,QAAQM,QAxC1C,WAA4B,IAAD,EAEnBxE,EAAOkB,EAAUqB,QAAQwD,UAAU,aAcjC3E,GAAoB,OAAT2D,QAAS,IAATA,GAAA,UAAAA,EAAWxC,eAAX,eAAoBS,OAAQ,2BAGvCgD,EAAa,CAfnB,SAAuBC,EAASC,GAM5B,IALA,IAAIC,EAAMF,EAAQhD,MAAM,KACpBmD,EAAOD,EAAI,GAAGtB,MAAM,WAAW,GAC/BwB,EAAOC,KAAKH,EAAI,IAChBI,EAAIF,EAAKjD,OACToD,EAAQ,IAAIC,WAAWF,GACpBA,KACHC,EAAMD,GAAKF,EAAKK,WAAWH,GAE/B,OAAO,IAAII,KAAK,CAACH,GAAQN,EAAU,CAAE/B,KAAMiC,IAKlCQ,CAAc5G,EAAMoB,EAAW,SAGxCqB,UAAUoE,MACVpE,UAAUoE,MAAM,CACZ9D,MAAOiD,EACPc,KAAM1F,IAELtB,MAAK,kBAAMiH,QAAQC,IAAI,4BACvBC,OAAM,SAACC,GAAD,OAAWH,QAAQC,IAAI,iBAAkBE,MAEpDH,QAAQC,IAAR,sDAeA,qBAAK9C,UAAU,mBAAf,SACI,wBAAQO,IAAKvD,EAAWgD,UAAU,aAAaiD,YAAajC,EAAekC,YAzEvF,SAAyBnF,GACO,IAAxBA,EAAEoF,YAAYC,OAAgBtC,GAGlCK,EAFgBpD,EAAEoF,YAAYE,QACdtF,EAAEoF,YAAYG,UAuElBC,UAAWtC,EAAgBuC,aAAcxC,EAAeyC,YAnExE,SAAyB1F,GACI,IAArBA,EAAE2F,QAAQxE,QAAiB4B,GAG/BK,EAFQpD,EAAE2F,QAAQ,GAAGC,QAAU5F,EAAE2F,QAAQ,GAAGzF,OAAOC,WAC3CH,EAAE2F,QAAQ,GAAGE,QAAU7F,EAAE2F,QAAQ,GAAGzF,OAAOG,YAiEvCyF,WAAY5C,EAAgBjD,MAAO,CAAE8F,YAAahD,EAAa,OAAS,gBCvJ/EiD,EAAM,WACjB,OACE,sBAAK/D,UAAU,gBAAf,UACE,qBAAKA,UAAU,mCAAf,SACE,qBAAKA,UAAU,OAAf,2BAEF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgE,UAAWxD,EAASyD,KAAK,SAChC,cAAC,IAAD,CAAOD,UAAWjH,EAAWkH,KAAK,aCH3BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxI,MAAK,YAAkD,IAA/CyI,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCAdO,IAAShF,OACP,cAAC,IAAMiF,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.1bcc82bf.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport * as pdfjsLib from 'pdfjs-dist/build/pdf';\r\nimport pdfjsWorker from 'pdfjs-dist/build/pdf.worker.entry';\r\nimport { savePdf } from '../services/pdfService';\r\n\r\npdfjsLib.GlobalWorkerOptions.workerSrc = pdfjsWorker;\r\n\r\nlet ctx;\r\nlet page;\r\nlet renderCtx;\r\nconst file = new FileReader();\r\n\r\n\r\nconst initialStyle = {\r\n    left: (window.innerWidth - 85) + 'px',\r\n    top: (window.innerHeight - 165) + 'px',\r\n    width: 80 + 'px',\r\n    height: 160 + 'px',\r\n}\r\n\r\nexport const CreatePdf = () => {\r\n    const canvasRef = useRef();\r\n    const fileName = useRef('file.png');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [link, setLink] = useState();\r\n    const [navPosition, setNavPosition] = useState(initialStyle);\r\n\r\n    useEffect(() => {\r\n        if (!window.visualViewport) return;\r\n        window.visualViewport.addEventListener(\"resize\", viewportHandler);\r\n        window.visualViewport.addEventListener(\"scroll\", viewportHandler);\r\n\r\n        return (() => {\r\n            window.visualViewport.removeEventListener(\"resize\", viewportHandler);\r\n            window.visualViewport.removeEventListener(\"scroll\", viewportHandler);\r\n        })\r\n    }, [])\r\n\r\n    const viewportHandler = (e) => {\r\n        const style = {\r\n            left: (e.target.width + e.target.offsetLeft - 85 * (1 / e.target.scale)) + 'px',\r\n            top: (e.target.height + e.target.offsetTop - 165 * (1 / e.target.scale)) + 'px',\r\n            width: 80 * (1 / e.target.scale) + 'px',\r\n            height: 160 * (1 / e.target.scale) + 'px',\r\n        }\r\n        setNavPosition(style);\r\n    }\r\n\r\n    useEffect(() => {\r\n        ctx = canvasRef.current.getContext('2d');\r\n    }, [canvasRef])\r\n\r\n    useEffect(() => {\r\n        if (link) navigator.clipboard.writeText(link)\r\n    }, [link])\r\n\r\n    const handlePdf = async (e) => {\r\n        setLink(null)\r\n        file.onload = () => {\r\n            // fileName = e.target.files[0].name;\r\n            fileName.current = e.target.files[0].name.split('.')[0];\r\n            onRenderCtx(file.result);\r\n        }\r\n        if (e.target.files.length) await file.readAsDataURL(e.target.files[0])\r\n    }\r\n\r\n    async function onRenderCtx(data) {\r\n        const doc = await pdfjsLib.getDocument(data).promise;\r\n        page = await doc.getPage(1);\r\n        const viewport = await page.getViewport({ scale: 2 });\r\n        canvasRef.current.height = viewport.height;\r\n        canvasRef.current.width = viewport.width;\r\n\r\n        renderCtx = {\r\n            canvasContext: ctx,\r\n            viewport\r\n        }\r\n\r\n        await page.render(renderCtx).promise;\r\n    }\r\n\r\n    async function onSavePdf() {\r\n        if (!file.result) return;\r\n        setIsLoading(true);\r\n        try {\r\n            const pdfToSave = { data: file.result, name: fileName.current }\r\n            const savedPdf = await savePdf(pdfToSave);\r\n            setLink(window.location.origin + '/' + savedPdf._id);\r\n        }\r\n        finally {\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"create-pdf-container\">\r\n            <div className=\"nav-wrapper\" style={navPosition}>\r\n                <div className=\"actions flex column space-between\">\r\n                    <input className=\"pdf-input\" id=\"pdf-file-input\" type=\"file\" accept=\"application/pdf\" onChange={handlePdf} hidden />\r\n                    <label className=\"upload\" htmlFor=\"pdf-file-input\">\r\n                        <div />\r\n                    </label>\r\n                    <div className={`link ${isLoading ? 'loading' : link ? 'copied' : ''}`} onClick={onSavePdf} />\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"canvas-container\">\r\n                <canvas ref={canvasRef} className=\"pdf-canvas\"></canvas>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import Axios from 'axios';\r\nconst axios = Axios.create({ withCredentials: true });\r\nconst baseUrl = process.env.NODE_ENV === 'production' ? '/api/pdf' : 'http://localhost:3030/api/pdf';\r\n\r\nexport function getPdf(id) {\r\n    return axios.get(`${baseUrl}/${id}`).then(res => res.data);\r\n}\r\n\r\nexport function savePdf(pdf) {\r\n    return axios.post(baseUrl, pdf).then(res => res.data);\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\nimport * as pdfjsLib from 'pdfjs-dist/build/pdf';\r\nimport pdfjsWorker from 'pdfjs-dist/build/pdf.worker.entry';\r\nimport { getPdf } from '../services/pdfService';\r\n\r\npdfjsLib.GlobalWorkerOptions.workerSrc = pdfjsWorker;\r\n\r\nlet ctx;\r\nlet page;\r\nlet renderCtx;\r\n\r\nconst initialStyle = {\r\n    left: (window.innerWidth - 85) + 'px',\r\n    top: (window.innerHeight - 245) + 'px',\r\n    width: 80 + 'px',\r\n    height: 240 + 'px',\r\n}\r\n\r\nexport const EditPdf = (props) => {\r\n    const pdfId = props.match.params.id;\r\n    const loadedPdf = useRef();\r\n    const canvasRef = useRef();\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isEditMode, setIsEditMode] = useState(false);\r\n    const [navPosition, setNavPosition] = useState(initialStyle);\r\n\r\n\r\n    useEffect(() => {\r\n        window.visualViewport.addEventListener(\"resize\", viewportHandler);\r\n        window.visualViewport.addEventListener(\"scroll\", viewportHandler);\r\n\r\n        return (() => {\r\n            window.visualViewport.removeEventListener(\"resize\", viewportHandler);\r\n            window.visualViewport.removeEventListener(\"scroll\", viewportHandler);\r\n        })\r\n    }, [])\r\n\r\n    const viewportHandler = (e) => {\r\n        const style = {\r\n            left: (e.target.width + e.target.offsetLeft - 85 * (1 / e.target.scale)) + 'px',\r\n            top: (e.target.height + e.target.offsetTop - 245 * (1 / e.target.scale)) + 'px',\r\n            width: 80 * (1 / e.target.scale) + 'px',\r\n            height: 240 * (1 / e.target.scale) + 'px',\r\n        }\r\n        setNavPosition(style);\r\n    }\r\n\r\n    useEffect(() => {\r\n        ctx = canvasRef.current.getContext('2d');\r\n        onGetPdf();\r\n    }, [canvasRef])\r\n\r\n    async function onGetPdf() {\r\n        setIsLoading(true);\r\n        loadedPdf.current = await getPdf(pdfId);\r\n        setIsLoading(false);\r\n        if (!loadedPdf.current) return;\r\n        onRenderCtx(loadedPdf.current.data)\r\n    }\r\n\r\n    async function onRenderCtx(data) {\r\n        const doc = await pdfjsLib.getDocument(data).promise;\r\n        page = await doc.getPage(1);\r\n        const viewport = await page.getViewport({ scale: 2 });\r\n        canvasRef.current.height = viewport.height;\r\n        canvasRef.current.width = viewport.width;\r\n        renderCtx = {\r\n            canvasContext: ctx,\r\n            viewport\r\n        }\r\n        await page.render(renderCtx).promise;\r\n    }\r\n\r\n    function startPosition() {\r\n        if (!isEditMode) return;\r\n    }\r\n\r\n    function finishPosition() {\r\n        if (!isEditMode) return;\r\n        ctx.beginPath();\r\n    }\r\n\r\n    function handleMouseMove(e) {\r\n        if (e.nativeEvent.which !== 1 || !isEditMode) return;\r\n        const offsetX = e.nativeEvent.offsetX;\r\n        const offsetY = e.nativeEvent.offsetY;\r\n        draw(offsetX, offsetY);\r\n    }\r\n\r\n    function handleTouchMove(e) {\r\n        if (e.touches.length !== 1 || !isEditMode) return;\r\n        var x = e.touches[0].clientX - e.touches[0].target.offsetLeft;\r\n        var y = e.touches[0].clientY - e.touches[0].target.offsetTop;\r\n        draw(x, y);\r\n    }\r\n\r\n    function draw(x, y) {\r\n        ctx.lineWidth = 5;\r\n        ctx.lineCap = 'round';\r\n        ctx.lineTo(x, y);\r\n        ctx.stroke();\r\n    }\r\n\r\n    async function clearCanvas() {\r\n        if (!page) return;\r\n        ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n        await page.render(renderCtx).promise;\r\n    }\r\n\r\n\r\n    function getWhatsappHref() {\r\n\r\n        let data = canvasRef.current.toDataURL(\"image/png\");\r\n\r\n        function dataURLtoFile(dataurl, filename) {\r\n            let arr = dataurl.split(','),\r\n                mime = arr[0].match(/:(.*?);/)[1],\r\n                bstr = atob(arr[1]),\r\n                n = bstr.length,\r\n                u8arr = new Uint8Array(n);\r\n            while (n--) {\r\n                u8arr[n] = bstr.charCodeAt(n);\r\n            }\r\n            return new File([u8arr], filename, { type: mime });\r\n        }\r\n\r\n        const fileName = loadedPdf?.current?.name || 'קבלה';\r\n\r\n        const file = dataURLtoFile(data, fileName + '.png');\r\n        const filesArray = [file];\r\n\r\n        if (navigator.share) /* && navigator.canShare({ files: filesArray })) */ {\r\n            navigator.share({\r\n                files: filesArray,\r\n                text: fileName,\r\n            })\r\n                .then(() => console.log('Share was successful.'))\r\n                .catch((error) => console.log('Sharing failed', error));\r\n        } else {\r\n            console.log(`Your system doesn't support sharing files.`);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"edit-pdf-container\">\r\n\r\n            <div className=\"nav-wrapper\" style={navPosition && { ...navPosition }}>\r\n                <div className=\"actions flex column space-between\">\r\n                    <button className={`edit ${isEditMode ? 'active' : ''}`} onClick={() => setIsEditMode((prev) => !prev)} />\r\n                    <button className=\"reset\" onClick={clearCanvas} />\r\n                    <button className=\"share\" onClick={getWhatsappHref} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"canvas-container\">\r\n                <canvas ref={canvasRef} className=\"pdf-canvas\" onMouseDown={startPosition} onMouseMove={handleMouseMove}\r\n                    onMouseUp={finishPosition} onTouchStart={startPosition} onTouchMove={handleTouchMove}\r\n                    onTouchEnd={finishPosition} style={{ touchAction: isEditMode ? 'none' : 'auto' }}></canvas>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { CreatePdf } from './pages/CreatePdf';\nimport { EditPdf } from './pages/EditPdf';\n\n\n\nexport const App = () => {\n  return (\n    <div className=\"app-container\">\n      <div className=\"logo-container flex align-center\">\n        <div className=\"logo\" >D-signature</div>\n      </div>\n      <Switch>\n        <Route component={EditPdf} path=\"/:id\" />\n        <Route component={CreatePdf} path=\"/\" />\n      </Switch>\n    </div>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/global.scss';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}